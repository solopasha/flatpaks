From 75b8258d8cdf78183738722971c06127d4c35c0e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kacper=20Michaj=C5=82ow?= <kasper93@gmail.com>
Date: Fri, 6 Jun 2025 12:07:40 +0200
Subject: [PATCH 1/2] glsl/spirv_glslang: warn if glslang is too old for
 requested spir-v

---
 src/glsl/spirv_glslang.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/glsl/spirv_glslang.c b/src/glsl/spirv_glslang.c
index ffb8f55be..518b55e11 100644
--- a/src/glsl/spirv_glslang.c
+++ b/src/glsl/spirv_glslang.c
@@ -69,6 +69,10 @@ static pl_spirv glslang_create(pl_log log, struct pl_spirv_version spirv_ver)
 
     // Clamp to supported version by glslang
     if (GLSLANG_SPV_MAX < spirv->version.spv_version) {
+        PL_WARN(spirv, "SPIR-V %u.%u is not supported by the current"
+                       " version of glslang. Falling back to %u.%u!",
+                spirv->version.spv_version >> 16, (spirv->version.spv_version >> 8) & 0xff,
+                GLSLANG_SPV_MAX >> 16, (GLSLANG_SPV_MAX >> 8) & 0xff);
         spirv->version.spv_version = GLSLANG_SPV_MAX;
         spirv->version.env_version = pl_spirv_version_to_vulkan(GLSLANG_SPV_MAX);
     }
-- 
GitLab


From 3662b1f5d5a721f31cbf6c0ad090ac2345834cab Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kacper=20Michaj=C5=82ow?= <kasper93@gmail.com>
Date: Fri, 6 Jun 2025 12:08:45 +0200
Subject: [PATCH 2/2] glsl/spirv_shaderc: check if shaderc recognizes Vulkan
 1.4

With older versions of shaderc that don't recognize Vulkan 1.4, setting
the environment would fall through to Vulkan 1.0, creating a mismatch
between the SPIR-V version and the Vulkan version.

A version check for shaderc is not possible because everything after
v2023.8 uses the same version due to a malformed version line. So
instead, we check if the relevant enum defines exist.

See: https://github.com/google/shaderc/issues/1496

This issue occurs when shaderc supports SPIR-V 1.6 but not Vulkan 1.4,
which uses the same SPIR-V version as Vulkan 1.3. As a result, clamping
only the SPIR-V version is no longer sufficient.

Fixes: 4c6d99edee23284f93b07f0f045cd660327465eb
Fixes: https://code.videolan.org/videolan/libplacebo/-/issues/335
Fixes: https://github.com/haasn/libplacebo/issues/333
---
 src/glsl/meson.build     |  8 ++++++++
 src/glsl/spirv_shaderc.c | 28 ++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)

diff --git a/src/glsl/meson.build b/src/glsl/meson.build
index 8fb5e699a..8e8ff3b19 100644
--- a/src/glsl/meson.build
+++ b/src/glsl/meson.build
@@ -4,6 +4,14 @@ components.set('shaderc', shaderc.found())
 if shaderc.found()
   build_deps += shaderc
   sources += 'glsl/spirv_shaderc.c'
+
+  # Version check for shaderc is not possible because everything after v2023.8
+  # uses this version due to a malformed version line.
+  # See https://github.com/google/shaderc/issues/1496
+  conf_internal.set('PL_HAVE_SHADERC_VK_1_4',
+    cc.has_header_symbol('shaderc/shaderc.h', 'shaderc_env_version_vulkan_1_4', dependencies: shaderc))
+  conf_internal.set('PL_HAVE_SHADERC_VK_1_3',
+    cc.has_header_symbol('shaderc/shaderc.h', 'shaderc_env_version_vulkan_1_3', dependencies: shaderc))
 endif
 
 # glslang
diff --git a/src/glsl/spirv_shaderc.c b/src/glsl/spirv_shaderc.c
index e3843822a..54076b392 100644
--- a/src/glsl/spirv_shaderc.c
+++ b/src/glsl/spirv_shaderc.c
@@ -22,6 +22,17 @@
 #include "spirv.h"
 #include "utils.h"
 
+#define VK_API_VERSION_MAJOR(version) (((uint32_t)(version) >> 22U) & 0x7FU)
+#define VK_API_VERSION_MINOR(version) (((uint32_t)(version) >> 12U) & 0x3FFU)
+
+#if defined(PL_HAVE_SHADERC_VK_1_4)
+# define SHADERC_VULKAN_MAX PL_VLK_VERSION(1, 4)
+#elif defined(PL_HAVE_SHADERC_VK_1_3)
+# define SHADERC_VULKAN_MAX PL_VLK_VERSION(1, 3)
+#else
+# define SHADERC_VULKAN_MAX PL_VLK_VERSION(1, 2)
+#endif
+
 const struct spirv_compiler pl_spirv_shaderc;
 
 struct priv {
@@ -57,10 +68,27 @@ static pl_spirv shaderc_create(pl_log log, struct pl_spirv_version spirv_ver)
 
     // Clamp to supported version by shaderc
     if (ver < spirv->version.spv_version) {
+        PL_WARN(spirv, "SPIR-V %u.%u is not supported by the current"
+                       " version of shaderc. Falling back to %u.%u!",
+                spirv->version.spv_version >> 16, (spirv->version.spv_version >> 8) & 0xff,
+                ver >> 16, (ver >> 8) & 0xff);
         spirv->version.spv_version = ver;
         spirv->version.env_version = pl_spirv_version_to_vulkan(ver);
     }
 
+    if (SHADERC_VULKAN_MAX < spirv->version.env_version) {
+        PL_WARN(spirv, "Vulkan %u.%u is not supported by the current"
+                       " version of shaderc. Falling back to %u.%u!",
+                       VK_API_VERSION_MAJOR(spirv->version.env_version),
+                       VK_API_VERSION_MINOR(spirv->version.env_version),
+                       VK_API_VERSION_MAJOR(SHADERC_VULKAN_MAX),
+                       VK_API_VERSION_MINOR(SHADERC_VULKAN_MAX));
+        // The SPIR-V version has already been clamped above.
+        // In practice, this only occurs for Vulkan 1.3 and 1.4,
+        // where the SPIR-V version is the same (1.6).
+        spirv->version.env_version = SHADERC_VULKAN_MAX;
+    }
+
     pl_hash_merge(&spirv->signature, (uint64_t) spirv->version.spv_version << 32 |
                                                 spirv->version.env_version);
     pl_hash_merge(&spirv->signature, (uint64_t) ver << 32 | rev);
-- 
GitLab

